/*
 *---------------------程序运行前---------------------
 *代码区  存放函数体二进制代码
 *全局区  存放全局变量，静态变量，常量（该区域数据在程序结束后由操作系统释放）

 *---------------------程序运行后---------------------
 *栈区    存放局部变量，函数参数值 (由编译器自动分配释放)
 *堆区                           (由程序员分配和释放)

 *不同区域意义：生命周期管理
 */




//P85 全局区
//全局区： 全局变量+静态变量+常量(字符串常量+Const修饰的全局变量)
//非全局区：局部变量+Const修饰的局部变量

//P86 栈区
//不要返回局部变量地址     局部变量存放在栈区，栈区数据在函数执行后自动释放

//P87 堆区
//使用 new    在堆区开辟内存 (int* p = new int(10) 返回的是该数据的指针)
//使用 delete 在堆区释放内存 (delete p)
//     delete[] p 用于释放数组


#include <iostream>
#include <string>
using namespace std;

/*----------------------------------------------P85-------------------------------------------------*/
//创建全局变量 在函数体外
int global_data = 0;
 
int main()
{
    //创建局部变量 在函数体内 (例如main)的未修饰变量都是局部变量
    int local_data = 0; 

    //创建静态变量 
    static int static_data = 0;

    //创建常量
        //字符串常量 (""双引号内的都是)
        //Const修饰的变量
            //Const修饰 全局变量 (函数外)
            //Const修饰 局部变量 (函数内)
/*----------------------------------------------P86-------------------------------------------------*/


/*----------------------------------------------P87-------------------------------------------------*/
    int* p = new int(10);


    return 0;
}
